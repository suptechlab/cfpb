// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var auth, basic_auth, conf, couch_utils, users;

  couch_utils = require('./couch_utils');

  basic_auth = require('basic-auth');

  auth = require('./validation').auth;

  conf = require('./config');

  users = require('./api/users');

  module.exports = {
    auth_hack: function(req, resp, next) {
      if (req.headers.cookie) {
        req.headers.cookie = req.headers.cookie.replace(/express_sess="(.*?)"/, 'express_sess=$1');
      }
      return next();
    },
    couch: function(req, resp, next) {
      var credentials;
      credentials = basic_auth(req);
      if (credentials && credentials.name === 'admin' && (credentials.pass = conf.COUCH_PWD)) {
        req.session.user = 'admin';
      }
      req.couch = couch_utils.nano_user(req.session.user);
      if (req.session.user === 'admin') {
        return next();
      }
      if (!req.session.user) {
        return resp.status(401).end(JSON.stringify({
          error: "unauthorized",
          msg: "You are not logged in."
        }));
      }
      return users.get_user(req.session.user, 'promise').then(function(user) {
        if (!auth.is_active_user(user)) {
          return resp.status(401).end(JSON.stringify({
            error: "unauthorized",
            msg: "You are not logged in."
          }));
        } else {
          return next();
        }
      }, function(err) {
        return resp.status(401).end(JSON.stringify({
          error: req.session.user,
          msg: err
        }));
      });
    }
  };

}).call(this);
