// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var a, do_action, h, validate, validate_doc_update, _;

  validate = require('./validation/index');

  do_action = require('pantheon-helpers').design_docs.do_action;

  validate_doc_update = require('pantheon-helpers').design_docs.validate_doc_update.validate_doc_update;

  h = require('./helpers');

  _ = require('underscore');

  a = {};

  a.do_actions = {
    user: {
      'r+': function(user, action, actor) {
        var role;
        role = action.resource + '|' + action.role;
        return h.insert_in_place(user.roles, role);
      },
      'r-': function(user, action, actor) {
        var role;
        role = action.resource + '|' + action.role;
        return h.remove_in_place(user.roles, role);
      },
      'u+': function(user, action, actor) {
        return h.insert_in_place(user.roles, 'kratos|enabled');
      },
      'u-': function(user, action, actor) {
        return user.roles = [];
      },
      'd+': function(user, action, actor) {
        var merge_target, path, value;
        path = ['data'].concat(action.path);
        value = action.data;
        if (!_.isObject(value) || _.isArray(value)) {
          throw new Error('value must be an object');
        }
        merge_target = h.mk_objs(user, path, {});
        return _.extend(merge_target, value);
      }
    },
    create: {
      'u+': function(user, action, actor) {
        return _.extend(user, action.record, {
          _id: 'org.couchdb.user:' + user._id,
          type: 'user',
          name: user._id
        });
      }
    }
  };

  a.validate_actions = {
    user: {
      'r+': function(event, actor, old_user, new_user) {
        return validate.add_resource_role(actor, new_user, event.resource, event.role);
      },
      'r-': function(event, actor, old_user, new_user) {
        return validate.remove_resource_role(actor, new_user, event.resource, event.role);
      },
      'u+': function(event, actor, old_user, new_user) {
        return validate.add_user(actor, old_user || new_user);
      },
      'u-': function(event, actor, old_user, new_user) {
        return validate.remove_user(actor, old_user);
      },
      'd+': function(event, actor, old_user, new_user) {
        return validate.add_user_data(actor, old_user, new_user);
      }
    }
  };

  a.do_action = do_action(a.do_actions, validate._get_doc_type, h.sanitize_user);

  a.validate_doc_update = validate_doc_update(a.validate_actions, validate._get_doc_type);

  module.exports = a;

}).call(this);
