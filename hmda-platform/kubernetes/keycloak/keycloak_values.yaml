image:
  registry: docker.io
  repository: bitnami/keycloak
  tag: 25.0.6

auth:
  adminUser: keycloak
  existingSecret: "keycloak-credentials"
  passwordSecretKey: "password"

tls:
  enabled: true
  autoGenerated: true

service:
  type: ClusterIP

production: true

httpRelativePath: "/auth/"

extraStartupArgs: "--spi-login-protocol-openid-connect-suppress-logout-confirmation-screen=true --spi-login-protocol-openid-connect-legacy-logout-redirect-uri=true"

containerPorts:
  http: 8080
  https: 8443

extraVolumes: 
  - name: theme
    emptyDir: {}
  - name: spi
    emptyDir: {}

extraVolumeMounts: 
  - name: theme
    mountPath: /opt/bitnami/keycloak/themes/hmda
  - name: spi
    mountPath: /opt/bitnami/keycloak/providers

initContainers:
  - name: theme-provider
    args:
    - -c
    - |
      echo "Copying theme..."
      cp -R /themes/* /theme/hmda
    command:
    - sh
    image: hmda/keycloak-theme-provider:latest
    imagePullPolicy: Always
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
      - name: theme
        mountPath: /theme/hmda
  - name: spi-provider
    args:
    - -c
    - |
      echo "Copying SPI..."
      cp -rv keycloak-authenticator-hmda-4.2.1.Final.jar /spi
    command:
    - sh
    image: hmda/keycloak-spi-provider:v2.7.4
    volumeMounts:
      - name: spi
        mountPath: /spi

extraEnvVars:
  - name: KC_PROXY
    value: reencrypt
  - name: KC_HOSTNAME_STRICT
    value: 'true'
  - name: KC_HOSTNAME
    valueFrom:
      configMapKeyRef:
        name: http-configmap
        key: auth.url
  - name: KC_ADMIN_HOSTNAME
    valueFrom:
      configMapKeyRef:
        name: http-configmap
        key: auth.url

postgresql:
  enabled: false

externalDatabase:
  existingSecret: "keycloak-postgresql"
  existingSecretHostKey: "host"
  existingSecretDatabaseKey: "database"
  existingSecretUserKey: "username"
  existingSecretPasswordKey: "postgresql-password"

logging:
  level: INFO