include "serialization.conf"

akka {

  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"

    query {
      journal.id = "akka.persistence.cassandra.query"
    }

    cassandra {
      events-by-tag {
        max-message-batch-size = 30
        max-message-batch-size = ${?TAG_BATCH_SIZE}
        flush-interval = 150ms
        flush-interval = ${?TAG_FLUSH_INTERVAL}
      }
      journal {
        keyspace = "hmda2_journal"
        keyspace = ${?CASSANDRA_JOURNAL_KEYSPACE}
        table = "journal"
        events-by-tag.max-message-batch-size = 30
        events-by-tag.max-message-batch-size = ${?TAG_BATCH_SIZE}
        events-by-tag.flush-interval = 150ms
        events-by-tag.flush-interval = ${?TAG_FLUSH_INTERVAL}
      }
      query {
        # reference: https://github.com/akka/akka-persistence-cassandra/blob/v0.101/core/src/main/resources/reference.conf
        # Sequence numbers for a persistenceId is assumed to be monotonically increasing
        # without gaps. That is used for detecting missing events.
        # In early versions of the journal that might not be true and therefore
        # this can be relaxed by setting this property to off.
        gap-free-sequence-numbers = off
      }
      snapshot {
        keyspace = "hmda2_snapshot"
        keyspace = ${?CASSANDRA_SNAPSHOT_KEYSPACE}
        table = "snapshot"
      }
    }
  }


}

datastax-java-driver {

  profiles {
    akka-persistence-cassandra-profile {
      basic {
        request.consistency = LOCAL_QUORUM
      }
    }
  }

  basic {
    contact-points = ["localhost:9042"]
    contact-points = [${?CASSANDRA_CLUSTER_HOSTS}]
    load-balancing-policy.local-datacenter = ""
    load-balancing-policy.local-datacenter = ${?CASSANDRA_CLUSTER_DC}
    load-balancing-policy.slow-replica-avoidance = false
    request.consistency = LOCAL_QUORUM
  }

  advanced {
    advanced.protocol {
      version = V4
    }
    auth-provider {
      class = PlainTextAuthProvider
      username = ""
      username = ${?CASSANDRA_CLUSTER_USERNAME}
      password = ""
      password = ${?CASSANDRA_CLUSTER_PASSWORD}
    }
    request-tracker {
      classes = [RequestLogger]
      logs {
        slow {
          threshold = 1 second
          enabled = true
        }
      }
    }
    ssl-engine-factory {
      class = DefaultSslEngineFactory
      truststore-path = ${?CASSANDRA_TRUSTSTORE_FILE}
      truststore-password = ${?CASSANDRA_TRUSTSTORE_PASSWORD}
      hostname-validation = false
    }
  }
}

kafka {
  hosts = "localhost:9092"
  hosts = ${?KAFKA_CLUSTER_HOSTS}
  idle-timeout = 5
  idle-timeout = ${?KAFKA_IDLE_TIMEOUT}
  security.protocol=""
  security.protocol=${?KAFKA_SECURITY}
  ssl.truststore.location = ""
  ssl.truststore.location = ${?TRUSTSTORE_PATH}
  ssl.truststore.password = ""
  ssl.truststore.password = ${?TRUSTSTORE_PASSWORD}
  ssl.endpoint = ""
  ssl.endpoint = ${?KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG}
}