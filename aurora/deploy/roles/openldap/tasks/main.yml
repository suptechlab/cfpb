# main.yml
---
- name: Install OpenLDAP packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - openldap-servers
    - openldap-clients
    - krb5-server-ldap
    - libselinux-python
    - openssl

- name: Delete the configuration directory
  file:
    dest: /etc/openldap/slapd.d
    state: absent

- name: Generate root password
  command: slappasswd -s {{ krb_service_user_password }}
  register: root_password

- name: Copy kerberos schema to proper location
  command: cp /usr/share/doc/krb5-server-ldap-1.10.3/kerberos.schema /etc/openldap/schema/
  args:
    creates: /etc/openldap/schema/kerberos.schema

- name: Deploy ACL file
  template:
    src: slapd.access.j2
    dest: /etc/openldap/slapd.access
  notify:
    - restart slapd

- name: Deploy slapd configuration
  template:
    src: slapd.conf.j2
    dest: /etc/openldap/slapd.conf
  notify:
    - restart slapd

- name: Deploy ldap.conf file
  template:
    src: ldap.conf.j2
    dest: /etc/openldap/ldap.conf

- name: Create directory for LDAP database
  file:
    dest: "{{ item }}"
    state: directory
    owner: ldap
    group: ldap
  with_items:
    - "/var/lib/ldap"
    - "/var/lib/ldap/{{ kdc_domain_name }}"
    - "/etc/openldap/certs"

- name: Generate private key
  command: "openssl genrsa -des3 -passout pass:password -out ldap_with_pass.key"
  args:
    chdir: /etc/openldap/certs
    creates: /etc/openldap/certs/ldap_with_pass.key

- name: Remove passphrase from key
  command: openssl rsa -in ldap_with_pass.key -passin pass:password -out ldap.key
  args:
    chdir: /etc/openldap/certs
    creates: /etc/openldap/certs/ldap.key

- name: Create and sign the new certificate
  command: "openssl req -new -x509 -subj '/C={{ country }}/ST={{ state }}/L={{ city }}/O={{ organization_name }}/CN={{ ansible_hostname }}/' -days 3650 -key ldap.key -out cert.crt -extensions v3_ca"
  args:
    chdir: /etc/openldap/certs
    creates: /etc/openldap/certs/cert.crt

- name: Open port
  command: "iptables -I {{ iptables_chain }} 3 -m state --state NEW -p tcp --dport {{ item }} -j ACCEPT"
  with_items:
    - 389
    - 636
  when: iptables_config

- name: Open ports
  command: "iptables -I {{ iptables_chain }} 3 -m state --state NEW -p udp --dport {{ item }} -j ACCEPT"
  with_items:
    - 389
    - 636
  when: iptables_config

- name: Save rules
  command: "/sbin/service iptables save"
  notify:
    - restart iptables
  when: iptables_config

- name: Enable slapd logging
  lineinfile:
    dest: /etc/rsyslog.conf
    line: "local4.* /var/log/slapd.log"
    regexp: "^local4.*"
    state: present
  notify:
    - restart rsyslog

- name: Start slapd service
  service:
    name: slapd
    state: started
    enabled: yes

- name: Deploy template for creating base domain
  template:
    src:  domain.ldif
    dest: /tmp
  register: result

- name: Add the base domain
  command: "{{ item }}"
  with_items:
    - ldapadd -x -D cn=admin,dc={{ kdc_domain_name.split('.')[-2] }},dc={{ kdc_domain_name.split('.')[-1] }} -w {{ krb_service_user_password }} -f /tmp/domain.ldif
    - touch /etc/openldap/rootdn_created
  args:
    creates: /etc/openldap/rootdn_created
