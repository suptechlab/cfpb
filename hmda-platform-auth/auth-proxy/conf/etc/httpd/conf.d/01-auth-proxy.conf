# Auth Proxy

Listen 8080

<VirtualHost *:8080>

  # Makes $HOSTNAME available as SSI envvar
  PassEnv HOSTNAME

  # mod_auth_openidc config 
  OIDCClientID ${OIDC_CLIENT_ID}
  OIDCProviderMetadataURL ${OIDC_METADATA_URI}
  OIDCOAuthVerifyJwksUri ${OIDC_JWKS_URI}
  OIDCRedirectURI ${OIDC_REDIRECT_URI}
  OIDCCryptoPassphrase ${OIDC_CRYPTO_PASSPHRASE}
  OIDCClaimPrefix ${OIDC_CLAIM_HEADER_PREFIX}
  OIDCOAuthSSLValidateServer ${OIDC_VALIDATE_SSL}
  OIDCOAuthRemoteUserClaim ${OIDC_REMOTE_USER_CLAIM} 
  OIDCAuthNHeader ${OIDC_REMOTE_USER_HEADER}

  # Upstream API Location
  <Location "${FILING_API_PATH_PREFIX}">
    AuthType oauth20
    AuthName "OpenID Connect (HMDA Ops)"
    Require valid-user

    ProxyPass ${FILING_API_UPSTREAM_URI}
    ProxyPassReverse ${FILING_API_UPSTREAM_URI}

    # We have encountered the following warning from our akka-http based APIs:
    #     Illegal 'x-forwarded-host' header: Invalid input ' '
    # This is caused by a space character being added to the comma-separated list
    # of hostnames in the `X-Forwarded-Host` header by a reverse proxy somewhere
    # in the request chain.  Setting `ProxyAddHeaders Off` is a brute-force means of
    # removing the additional hostname.  This does make the warning go away, but it
    # also mean our akka-http APIs (and any future services put behind auth-proxy) will
    # only see `X-Forwarded-*` headers set by the previous reverse proxy, not auth-proxy.
    ProxyAddHeaders Off
  </Location>

  # Top-level path, providing default settings for CORS and OIDC
  <Location "/">

    # CORS Preflight
    # SEE: https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests
    <If "%{REQUEST_METHOD} == 'OPTIONS' && %{HTTP:Origin} != '' && %{HTTP:Access-Control-Request-Headers} != '' && %{HTTP:Access-Control-Request-Method} != ''">
      Header always set Access-Control-Allow-Origin "*"
      Header always set Access-Control-Allow-Methods: "GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD"
      Header always set Access-Control-Allow-Headers: "Authorization, Cache-Control, Accept, Content-Type"
      Header always set Access-Control-Max-Age "600"

      # Disables authorization for CORS Preflight requests
      AuthType None
      Require all granted

      RewriteEngine On
      RewriteRule ^(.*)$ $1 [R=204,L]
    </If>
    <ElseIf "%{HTTP:Origin} != ''">
      Header always set Access-Control-Allow-Origin "*"
    </ElseIf>

  </Location>

</VirtualHost>
